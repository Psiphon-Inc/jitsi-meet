/**
 * Move the @atlaskit/flag container up a little bit so it does not cover the
 * toolbar with the first notification.
 */
.jIMojv{
    bottom: calc(#{$newToolbarSizeWithPadding}) !important;
}
/**
 * TODO: Remove, ideally we could inject css classes into the react components
 * fix tooltips
 */
div[class^='Modal__Dialog'] {
    background-color: $psiphon-gray1 !important;
    color: $psiphon-text3 !important;

    // text entry
    label[class^='Label__LabelWrapper'] span {
        color: $psiphon-text3 !important;
    }
    div[class^='Content__ChildWrapper'] {
        & > div { // text entry box
            background-color: transparent !important;
            border-color: $psiphon-gray3 !important;

            &:focus-within {
                border-color: $psiphon-brand-color !important;
            }
        }

        input,
        textarea {
            color: $psiphon-text3 !important;
        }
    }

    // dropdown items
    div[class^='Droplist__Content'] span { 
        color: $psiphon-text3 !important;
        background-color: inherit !important;

        &[class^='Item-']:hover { // single item
            background-color: $psiphon-info-color !important;

            [class^='ItemParts__Content'] {
                color: $psiphon-gray1 !important;
            }
        }

        &[class^='Item__Span']:hover { // group of items 
            background-color: $psiphon-info-color !important;

            span[class^='Item__Description'],
            span[class^='Item__Content'] { // .jADFbf
                color: $psiphon-gray1 !important;
            }
        }
    }
    div[class^='Droplist__Trigger'] {
        button:not([class^='styled__Button']) { // only style dropdown triggers
            background-color: $psiphon-gray3 !important;
            color: $psiphon-text3 !important;

            &:hover {
                background-color: $psiphon-info-color !important;
                color: $psiphon-gray1 !important;
            }
        }
    }
}

.invite-more-dialog {
    button > span[class^='Icon__'] {
        color: $psiphon-gray1;
    }

    div[class^='styledContainer'] > span {
        background-color: $psiphon-input;
        color: $psiphon-gray1;
    }
}

.modal-dialog-form-error {
    button div[class^='styledInlineMessage'] { // error message
        color: $psiphon-brand-color !important;
        
        span { // warning icon
            color: inherit !important;
            fill: $psiphon-gray1 !important;
        }
    }

    div[class^='styled__Container'] { // list item help
        background-color: $psiphon-gray3 !important;
        color: $psiphon-text3 !important;
    }
}

.security-dialog {
    // slider
    div[class^='Slide-'] {
        background-color: $psiphon-text3;

        [class^='IconWrapper-'] { // slider's inner icon
            color: $psiphon-gray1;
        }

        &:hover {
            background-color: $psiphon-gray4;
            transition: background-color .3s ease-in;
        }
    }
    
    // slider knob  
    span[class^='Handle-'] {
        background-color: $psiphon-gray1;
    }
}


// non hardcoded values:
div[role="alert"] {
    // maybe get rid of this? possibilities might be endless //prejoin, liveStreaming, recording, transcribing, videoSIPGW
    //&[data-testid^='connection.'],
    //&[data-testid^='dialog.'],
    //&[data-testid^='deviceError.'],
    //&[data-testid^='error.'],
    //&[data-testid^='lobby.'],
    //&[data-testid^='notify.'],
    //&[data-testid^='toolbar.'] {
        background-color: $psiphon-gray3 !important;
        color: $psiphon-text3 !important;

        button {
            background-color: transparent;
            color: $psiphon-info-color !important;
        }

        button svg {
            fill: $psiphon-text3 !important;
        }

        div, span {
            color: $psiphon-text3 !important;
        }

        button span[class^='css-'] {
            color: $psiphon-info-color !important;
        }

        svg {
            fill: $psiphon-gray3 !important;
        }
    //}
}

/**
 * Disable the slide-in animation for @atlaskit/flag due to the animation
 * repeating for each queued flag once it becomes the top flag.
 */
 .mIBKA:first-child {
    animation: cbfRuT 0s !important;
    -webkit-animation: cbfRuT 0s !important;
}

.modal-dialog-form {
    /**
     * Update the @atlaskit/dropdown-menu trigger wrapper to make sure it looks
     * click-able.
     */
    .cjJUnw {
        cursor: pointer;
    }

    /**
     * Override @atlaskit/dropdown-menu styling when in a modal because the
     * dropdown backgrounds clash with the modal backgrounds.
     */
    .cksvax[data-role=droplistContent] {
        background-color: $psiphon-gray3;
        border: 1px solid $psiphon-gray1;
    }
}

/**
 * Override @atlaskit/theme styling for the top toolbar so it displays over
 * the video thumbnail while obscuring as little as possible.
 */
.videocontainer .tOoji {
    background: none;
}
.tOoji #videospace {
    background: #474747;
}

/**
 * Override @atlaskit/InlineDialog styling for the overflowmenu so it displays
 * with the correct height.
 */
.toolbox-button-wth-dialog .eYJELv {
    max-height: initial;
}
